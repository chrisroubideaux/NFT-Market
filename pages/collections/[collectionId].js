import React, { useEffect, useState, useMemo } from 'react';
import { useRouter } from 'next/router';
import Head from 'next/head';
import Header from '../../components/Header';
import Banner from '../../components/Banner';
import NFTCard from '../../components/NFTCard';
import Features from '../../components/Features';
import Jumbotron from '../../components/Jumbotron';
import Slider from '../../components/Slider';
import Footer from '../../components/Footer';
import { useWeb3 } from '@3rdweb/hooks';
import { client } from '../../lib/sanityClient';
import { ThirdwebSDK } from '@3rdweb/sdk';
import { Row, Col } from 'react-bootstrap';
//import { CgWebsite } from 'react-icons/cg'; //
//import { AiOutlineInstagram, AiOutlineTwitter } from 'react-icons/ai'; //
//import { HiDotsVertical } from 'react-icons/hi';//

const Collection = () => {
  const router = useRouter();
  const { provider } = useWeb3();
  const { collectionId } = router.query;
  const [collection, setCollection] = useState({});
  const [nfts, setNfts] = useState([]);
  const [listings, setListings] = useState([]);

  //

  const nftModule = useMemo(() => {
    if (!provider) return;

    const sdk = new ThirdwebSDK(provider.getSigner(), '');
    return sdk.getNFTModule(collectionId);
  }, [provider]);

  // get all NFTs in the collection
  useEffect(() => {
    if (!nftModule) return;
    (async () => {
      const nfts = await nftModule.getAll();

      setNfts(nfts);
    })();
  }, [nftModule]);

  const marketPlaceModule = useMemo(() => {
    if (!provider) return;

    const sdk = new ThirdwebSDK(provider.getSigner(), '');
    return sdk.getMarketplaceModule('');
  }, [provider]);

  // get all listings in the collection
  useEffect(() => {
    if (!marketPlaceModule) return;
    (async () => {
      setListings(await marketPlaceModule.getAllListings());
    })();
  }, [marketPlaceModule]);

  const fetchCollectionData = async (sanityClient = client) => {
    const query = `*[_type == "marketItems" && contractAddress == "${collectionId}" ] {
      "imageUrl": profileImage.asset->url,
      "bannerImageUrl": bannerImage.asset->url,
      volumeTraded,
      createdBy,
      contractAddress,
      "creator": createdBy->userName,
      title, floorPrice,
      "allOwners": owners[]->,
      description
    }`;

    const collectionData = await sanityClient.fetch(query);

    console.log(collectionData, 'ðŸ”¥');

    // the query returns 1 object inside of an array
    await setCollection(collectionData[0]);
  };

  useEffect(() => {
    fetchCollectionData();
  }, [collectionId]);

  console.log(router.query);
  console.log(router.query.collectionId);
  return (
    <>
      <Head>
        <title>NFT Collection</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin />

        <link
          href="https://fonts.googleapis.com/css2?family=Abel&display=swap"
          rel="stylesheet"
        />
        <link
          href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3"
          crossOrigin="anonymous"
        />
        <link
          rel="stylesheet"
          href="https://use.fontawesome.com/releases/v6.0.0/css/all.css"
        />
        <link rel="stylesheet" href="https://unpkg.com/swiper/css/swiper.css" />
      </Head>
      <Header />
      <Banner />
      <div className="container py-5">
        <h2 className="text-center py-5">Latest NFT Collections</h2>

        <div className="container">
          <div className="row">
            <div className="col-sm-3">
              <h4>{collection?.creator}</h4>
            </div>
            <div className="col-sm-3">
              <h4>Collections</h4>
              <h2>{nfts.length}</h2>
            </div>
            <div className="col-sm-3">
              <h4>
                {collection?.allOwners ? collection.allOwners.length : ''}
              </h4>
              <h4> {collection?.floorPrice}</h4>
            </div>
            <div className="col-sm-3">
              <h4>Trade volume</h4>
              <img
                src="https://storage.opensea.io/files/6f8e2979d428180222796ff4a33ab929.svg"
                alt="eth"
                className="img"
                height="24"
                width="30"
              />
              <h4 className="mt-2"> {collection?.volumeTraded}.5K</h4>
              <h4>{collection?.description}</h4>
            </div>
          </div>
        </div>
        <div className=" row row-cols-1 row-cols-1 row-cols-lg-3 row-cols-lg-4 g-4 py-5">
          {nfts.map((nftItem, id) => (
            <NFTCard
              key={id}
              nftItem={nftItem}
              title={collection?.title}
              listings={listings}
            />
          ))}
        </div>
        <Features />
        <Jumbotron />
        <Slider />
        <Footer />
      </div>
    </>
  );
};

export default Collection;
